---
title: Index page
---
{% extends "./layouts/_layout.njk" %}

{% block content %}

<!-- Scene -->
<div id="container"></div>
<!-- Scene -->

<!-- Vert Shader -->
<script id="vertShader" type="shader">
	varying vec2 vUv;
	varying vec3 vecPos;
	varying vec3 v_position;
	uniform float time;
	uniform float blend;
	uniform sampler2D original;
	uniform sampler2D target;
	
	

	void main(void) {
	    vUv = uv;
	    v_position = position.xyz;
	    float roundblend = sin(3.1415926 * blend);
        float stepblend = clamp(2. * (v_position.x + v_position.y) + 3. * blend  - 1., 0., 1.);

	    float originalR = texture2D(original, vUv).r;
	    float targetR = texture2D(target, vUv).r;

        v_position.z = 0.2 * stepblend;
        v_position.z = 0.2 * mix(originalR, targetR, stepblend) + roundblend * 0.1 * sin(v_position.x * 10. + time / 1000.);
      
        v_position.x = position.x + roundblend * 0.3 * sin(v_position.x + v_position.y + blend);
        v_position.y = position.y + roundblend * 0.3 * sin(v_position.x + v_position.y + blend);
    
	    vecPos = (modelViewMatrix * vec4(v_position, 1.0)).xyz;

	    gl_Position = projectionMatrix * vec4(vecPos, 1.0);
	}
</script>
<!-- Vert Shader -->


<!-- Frag Shader -->
<script id="fragShader" type="shader">
	varying vec3 v_position;
	varying vec2 vUv;
	uniform float blend;    
	uniform sampler2D original;
	uniform sampler2D target;
    
	
	void main(void) {
        float gridsize = 1000.;
		vec2 st = v_position.xy;

		float koef = clamp(v_position.z / 60., 0., 1.);

		vec3 color1 = vec3(1., 1., 1.);
		vec3 color2 = vec3(1., 0., 0.);

		vec3 color3 = mix(color1, color2, koef);

		vec2 grid = abs(fract(gridsize * st / 4. - 0.5) - 0.5) / fwidth(gridsize * st/4.);
		float color = min(grid.x, grid.y);

        float stepblend = clamp(v_position.x + v_position.y + 3. * blend  - 1., 0., 1.);
        

		gl_FragColor = vec4(color3, 1. - color);  
		gl_FragColor = vec4(1., 0., 0., 1.);  
        vec4 result = texture2D(original, vUv) * (1. - stepblend) + texture2D(target, vUv) * (stepblend);
		{# gl_FragColor = result * (2.- color); #}
		gl_FragColor = result;
	}
</script>
<!-- Frag Shader -->


{% endblock %}